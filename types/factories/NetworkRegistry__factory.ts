/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NetworkRegistry,
  NetworkRegistryInterface,
} from "../NetworkRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_network",
        type: "address",
      },
    ],
    name: "NetworkAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_network",
        type: "address",
      },
    ],
    name: "NetworkRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_network",
        type: "address",
      },
    ],
    name: "addNetwork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "networks",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_network",
        type: "address",
      },
    ],
    name: "removeNetwork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610a348061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b14610071578063b5e2efd21461008f578063d567e4a4146100bf578063eb3b299b146100db578063f2fde38b146100f7575b600080fd5b61006f610113565b005b61007961019b565b604051610086919061071c565b60405180910390f35b6100a960048036038101906100a49190610768565b6101c4565b6040516100b691906107b0565b60405180910390f35b6100d960048036038101906100d49190610768565b6101e4565b005b6100f560048036038101906100f09190610768565b61037e565b005b610111600480360381019061010c9190610768565b610517565b005b61011b61060f565b73ffffffffffffffffffffffffffffffffffffffff1661013961019b565b73ffffffffffffffffffffffffffffffffffffffff161461018f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018690610828565b60405180910390fd5b6101996000610617565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915054906101000a900460ff1681565b6101ec61060f565b73ffffffffffffffffffffffffffffffffffffffff1661020a61019b565b73ffffffffffffffffffffffffffffffffffffffff1614610260576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025790610828565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156102ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e4906108ba565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f4eb9d0d985e65e365eff0bd62118f7589d4fed19bc50d43bc3adca264ee8f87581604051610373919061071c565b60405180910390a150565b61038661060f565b73ffffffffffffffffffffffffffffffffffffffff166103a461019b565b73ffffffffffffffffffffffffffffffffffffffff16146103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f190610828565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047d9061094c565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fbba9c43ffcd1567cf7e05df875a5c785f80ec1214a9ca5465c8f347f71bd963d8160405161050c919061071c565b60405180910390a150565b61051f61060f565b73ffffffffffffffffffffffffffffffffffffffff1661053d61019b565b73ffffffffffffffffffffffffffffffffffffffff1614610593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058a90610828565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610603576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fa906109de565b60405180910390fd5b61060c81610617565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610706826106db565b9050919050565b610716816106fb565b82525050565b6000602082019050610731600083018461070d565b92915050565b600080fd5b610745816106fb565b811461075057600080fd5b50565b6000813590506107628161073c565b92915050565b60006020828403121561077e5761077d610737565b5b600061078c84828501610753565b91505092915050565b60008115159050919050565b6107aa81610795565b82525050565b60006020820190506107c560008301846107a1565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006108126020836107cb565b915061081d826107dc565b602082019050919050565b6000602082019050818103600083015261084181610805565b9050919050565b7f52656769737472793a204e6574776f726b20697320616c72656164792072656760008201527f6973746572656400000000000000000000000000000000000000000000000000602082015250565b60006108a46027836107cb565b91506108af82610848565b604082019050919050565b600060208201905081810360008301526108d381610897565b9050919050565b7f52656769737472793a204e6574776f726b2069736e277420726567697374657260008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b60006109366022836107cb565b9150610941826108da565b604082019050919050565b6000602082019050818103600083015261096581610929565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006109c86026836107cb565b91506109d38261096c565b604082019050919050565b600060208201905081810360008301526109f7816109bb565b905091905056fea2646970667358221220f28dfc529487276379421043c5e9ebede08f4a2adcbf7fe050e68b81b4e8e7b364736f6c63430008090033";

export class NetworkRegistry__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NetworkRegistry> {
    return super.deploy(overrides || {}) as Promise<NetworkRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NetworkRegistry {
    return super.attach(address) as NetworkRegistry;
  }
  connect(signer: Signer): NetworkRegistry__factory {
    return super.connect(signer) as NetworkRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NetworkRegistryInterface {
    return new utils.Interface(_abi) as NetworkRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NetworkRegistry {
    return new Contract(address, _abi, signerOrProvider) as NetworkRegistry;
  }
}
