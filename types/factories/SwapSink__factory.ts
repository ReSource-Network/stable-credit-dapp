/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SwapSink, SwapSinkInterface } from "../SwapSink";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_source",
        type: "address",
      },
    ],
    name: "__SwapSink_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "network",
        type: "address",
      },
    ],
    name: "convertFeesToSwapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "network",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseSink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_source",
        type: "address",
      },
    ],
    name: "setSource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unPauseSink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506119cd806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a71532cd11610066578063a71532cd1461010f578063a80269121461012b578063d929b2c414610147578063e51e3f9e14610151578063f2fde38b1461016d5761009e565b80635c975abb146100a3578063715018a6146100c15780638da5cb5b146100cb578063956b5d0b146100e95780639cf0f0ed14610105575b600080fd5b6100ab610189565b6040516100b89190610fef565b60405180910390f35b6100c96101a0565b005b6100d3610228565b6040516100e0919061104b565b60405180910390f35b61010360048036038101906100fe9190611097565b610252565b005b61010d610255565b005b610129600480360381019061012491906110fa565b610323565b005b61014560048036038101906101409190611097565b6104ae565b005b61014f61056e565b005b61016b60048036038101906101669190611097565b61063b565b005b61018760048036038101906101829190611097565b610781565b005b6000606560009054906101000a900460ff16905090565b6101a8610879565b73ffffffffffffffffffffffffffffffffffffffff166101c6610228565b73ffffffffffffffffffffffffffffffffffffffff161461021c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021390611197565b60405180910390fd5b6102266000610881565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b50565b61025d610879565b73ffffffffffffffffffffffffffffffffffffffff1661027b610228565b73ffffffffffffffffffffffffffffffffffffffff16146102d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c890611197565b60405180910390fd5b6102d9610189565b15610319576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031090611203565b60405180910390fd5b610321610947565b565b60026097541415610369576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103609061126f565b60405180910390fd5b6002609781905550600081116103b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab906112db565b60405180910390fd5b61045e3330838573ffffffffffffffffffffffffffffffffffffffff1663647846a56040518163ffffffff1660e01b815260040160206040518083038186803b15801561040057600080fd5b505afa158015610414573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104389190611339565b73ffffffffffffffffffffffffffffffffffffffff166109ea909392919063ffffffff16565b8060ca60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060016097819055505050565b6104b6610879565b73ffffffffffffffffffffffffffffffffffffffff166104d4610228565b73ffffffffffffffffffffffffffffffffffffffff161461052a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052190611197565b60405180910390fd5b8060c960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610576610879565b73ffffffffffffffffffffffffffffffffffffffff16610594610228565b73ffffffffffffffffffffffffffffffffffffffff16146105ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e190611197565b60405180910390fd5b6105f2610189565b610631576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610628906113b2565b60405180910390fd5b610639610a73565b565b600060019054906101000a900460ff166106635760008054906101000a900460ff161561066c565b61066b610b15565b5b6106ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a290611444565b60405180910390fd5b60008060019054906101000a900460ff1615905080156106fb576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610703610b26565b61070b610b7f565b610713610bd8565b61071b610947565b8160c960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550801561077d5760008060016101000a81548160ff0219169083151502179055505b5050565b610789610879565b73ffffffffffffffffffffffffffffffffffffffff166107a7610228565b73ffffffffffffffffffffffffffffffffffffffff16146107fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f490611197565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561086d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610864906114d6565b60405180910390fd5b61087681610881565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61094f610189565b1561098f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098690611542565b60405180910390fd5b6001606560006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586109d3610879565b6040516109e0919061104b565b60405180910390a1565b610a6d846323b872dd60e01b858585604051602401610a0b93929190611571565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c31565b50505050565b610a7b610189565b610aba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab1906115f4565b60405180910390fd5b6000606560006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610afe610879565b604051610b0b919061104b565b60405180910390a1565b6000610b2030610cf8565b15905090565b600060019054906101000a900460ff16610b75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6c90611686565b60405180910390fd5b610b7d610d1b565b565b600060019054906101000a900460ff16610bce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc590611686565b60405180910390fd5b610bd6610d74565b565b600060019054906101000a900460ff16610c27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1e90611686565b60405180910390fd5b610c2f610de0565b565b6000610c93826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610e419092919063ffffffff16565b9050600081511115610cf35780806020019051810190610cb391906116d2565b610cf2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce990611771565b60405180910390fd5b5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16610d6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6190611686565b60405180910390fd5b6001609781905550565b600060019054906101000a900460ff16610dc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dba90611686565b60405180910390fd5b6000606560006101000a81548160ff021916908315150217905550565b600060019054906101000a900460ff16610e2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2690611686565b60405180910390fd5b610e3f610e3a610879565b610881565b565b6060610e508484600085610e59565b90509392505050565b606082471015610e9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9590611803565b60405180910390fd5b610ea785610cf8565b610ee6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edd9061186f565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610f0f9190611909565b60006040518083038185875af1925050503d8060008114610f4c576040519150601f19603f3d011682016040523d82523d6000602084013e610f51565b606091505b5091509150610f61828286610f6d565b92505050949350505050565b60608315610f7d57829050610fcd565b600083511115610f905782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc49190611975565b60405180910390fd5b9392505050565b60008115159050919050565b610fe981610fd4565b82525050565b60006020820190506110046000830184610fe0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110358261100a565b9050919050565b6110458161102a565b82525050565b6000602082019050611060600083018461103c565b92915050565b600080fd5b6110748161102a565b811461107f57600080fd5b50565b6000813590506110918161106b565b92915050565b6000602082840312156110ad576110ac611066565b5b60006110bb84828501611082565b91505092915050565b6000819050919050565b6110d7816110c4565b81146110e257600080fd5b50565b6000813590506110f4816110ce565b92915050565b6000806040838503121561111157611110611066565b5b600061111f85828601611082565b9250506020611130858286016110e5565b9150509250929050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061118160208361113a565b915061118c8261114b565b602082019050919050565b600060208201905081810360008301526111b081611174565b9050919050565b7f5377617053696e6b3a2053696e6b20616c726561647920706175736564000000600082015250565b60006111ed601d8361113a565b91506111f8826111b7565b602082019050919050565b6000602082019050818103600083015261121c816111e0565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611259601f8361113a565b915061126482611223565b602082019050919050565b600060208201905081810360008301526112888161124c565b9050919050565b7f5377617053696e6b3a2043616e6e6f74206465706f7369742030000000000000600082015250565b60006112c5601a8361113a565b91506112d08261128f565b602082019050919050565b600060208201905081810360008301526112f4816112b8565b9050919050565b60006113068261102a565b9050919050565b611316816112fb565b811461132157600080fd5b50565b6000815190506113338161130d565b92915050565b60006020828403121561134f5761134e611066565b5b600061135d84828501611324565b91505092915050565b7f5377617053696e6b3a2053696e6b206e6f742070617573656400000000000000600082015250565b600061139c60198361113a565b91506113a782611366565b602082019050919050565b600060208201905081810360008301526113cb8161138f565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b600061142e602e8361113a565b9150611439826113d2565b604082019050919050565b6000602082019050818103600083015261145d81611421565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006114c060268361113a565b91506114cb82611464565b604082019050919050565b600060208201905081810360008301526114ef816114b3565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b600061152c60108361113a565b9150611537826114f6565b602082019050919050565b6000602082019050818103600083015261155b8161151f565b9050919050565b61156b816110c4565b82525050565b6000606082019050611586600083018661103c565b611593602083018561103c565b6115a06040830184611562565b949350505050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b60006115de60148361113a565b91506115e9826115a8565b602082019050919050565b6000602082019050818103600083015261160d816115d1565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000611670602b8361113a565b915061167b82611614565b604082019050919050565b6000602082019050818103600083015261169f81611663565b9050919050565b6116af81610fd4565b81146116ba57600080fd5b50565b6000815190506116cc816116a6565b92915050565b6000602082840312156116e8576116e7611066565b5b60006116f6848285016116bd565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b600061175b602a8361113a565b9150611766826116ff565b604082019050919050565b6000602082019050818103600083015261178a8161174e565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006117ed60268361113a565b91506117f882611791565b604082019050919050565b6000602082019050818103600083015261181c816117e0565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611859601d8361113a565b915061186482611823565b602082019050919050565b600060208201905081810360008301526118888161184c565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156118c35780820151818401526020810190506118a8565b838111156118d2576000848401525b50505050565b60006118e38261188f565b6118ed818561189a565b93506118fd8185602086016118a5565b80840191505092915050565b600061191582846118d8565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b600061194782611920565b611951818561113a565b93506119618185602086016118a5565b61196a8161192b565b840191505092915050565b6000602082019050818103600083015261198f818461193c565b90509291505056fea26469706673582212206f0ed964ff0cc7b36c80c940a0d6f1bb9ba14c25a8d4ae75d80508834b5062e364736f6c63430008090033";

export class SwapSink__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SwapSink> {
    return super.deploy(overrides || {}) as Promise<SwapSink>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SwapSink {
    return super.attach(address) as SwapSink;
  }
  connect(signer: Signer): SwapSink__factory {
    return super.connect(signer) as SwapSink__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapSinkInterface {
    return new utils.Interface(_abi) as SwapSinkInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapSink {
    return new Contract(address, _abi, signerOrProvider) as SwapSink;
  }
}
